<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="priv.yue.quartz.mapper.QuartzJobMapper">

  <sql id="Base_Column_List">
    job_id, dept_id, bean_name, cron_expression, enabled, job_name, method_name, params, description,
    person_in_charge, email, pause_after_failure, last_exec_is_success, create_by, update_by, create_time,
    update_time
  </sql>

  <resultMap id="BaseRM" type="priv.yue.quartz.domain.QuartzJob">
    <id column="job_id" jdbcType="BIGINT" property="jobId" />
    <result column="dept_id" jdbcType="BIGINT" property="deptId"/>
    <result column="bean_name" jdbcType="VARCHAR" property="beanName" />
    <result column="cron_expression" jdbcType="VARCHAR" property="cronExpression" />
    <result column="enabled" jdbcType="BIT" property="enabled" />
    <result column="job_name" jdbcType="VARCHAR" property="jobName" />
    <result column="method_name" jdbcType="VARCHAR" property="methodName" />
    <result column="params" jdbcType="VARCHAR" property="params" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="person_in_charge" jdbcType="VARCHAR" property="personInCharge" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="pause_after_failure" jdbcType="BIT" property="pauseAfterFailure" />
    <result column="last_exec_is_success" jdbcType="INTEGER" property="lastExecIsSuccess" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>

  <select id="selectPage" resultMap="BaseRM">
    select quartz.* from quartz_job quartz
    left join sys_dept dept on quartz.dept_id = dept.dept_id
    <where>
      <if test="map.search != null and map.search != ''">
        and quartz.job_name like "%"#{map.search}"%"
      </if>
      and (dept.path like concat(#{map.path},#{map.userDeptId},',%') or dept.dept_id = #{map.userDeptId})
    </where>
    <if test="map.orderBy != null and map.orderBy != ''">
      order by ${map.orderBy}
    </if>
  </select>

</mapper>