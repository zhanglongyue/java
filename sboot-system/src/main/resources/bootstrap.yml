server:
  port: 9890

spring:
  application:
    name: sboot-system
  cloud:
    nacos:
      discovery:
        server-addr: ${nacos.addr}
        namespace: ${nacos.namespace}
        group: ${nacos.group}
      config:
        server-addr: ${nacos.addr}
        file-extension: yml
        namespace: ${nacos.namespace}
        group: ${nacos.group}
        extension-configs[0]:
          data-id: sboot-common-db.yml
          group: ${nacos.group}
          refresh: true
        extension-configs[1]:
          data-id: sboot-common-redis.yml
          group: ${nacos.group}
          refresh: true
        extension-configs[2]:
          data-id: sboot-common-rabbit.yml
          group: ${nacos.group}
          refresh: true
        extension-configs[3]:
          data-id: sboot-common-stream.yml
          group: ${nacos.group}
          refresh: true
        extension-configs[4]:
          data-id: sboot-common-stream-log.yml
          group: ${nacos.group}
          refresh: true


########################## Nacos默认拉取的配置文件说明 ##########################
# ${spring.application.name}-${spring/profile.active}.${spring.cloud.nacos.config.file-extension}
# 匹配以上格式，最终拉取的配置文件为 sboot-system-dev.yml



########################## 各环境配置 ##########################
# 启动时加上 VM参数 -Dspring.profiles.active=dev 指定环境
---
spring:
  profiles: dev
nacos:
  addr: localhost:8848
  namespace: 8cb6f1af-d79d-4969-a272-ad470f474c66
  group: DEFAULT_GROUP

---
spring:
  profiles: prod
nacos:
  addr: localhost:8848
  namespace: 8cb6f1af-d79d-4969-a272-ad470f474c66
  group: DEFAULT_GROUP

---
spring:
  profiles: test
nacos:
  addr: localhost:8848
  namespace: 8cb6f1af-d79d-4969-a272-ad470f474c66
  group: DEFAULT_GROUP

---
spring:
  profiles: docker
  cloud:
    nacos:
      discovery:
        # docker默认桥接模式，向nacos注册时IP为docker内网IP，如172.XX.XX.XX。会导致无法正常访问服务
        # 指定注册时服务的IP及端口，确保其他服务能够访问到
        ip: 192.168.0.105
        port: ${server.port}
nacos:
  addr: host.docker.internal:8848
  namespace: 8cb6f1af-d79d-4969-a272-ad470f474c66
  group: DOCKER_GROUP