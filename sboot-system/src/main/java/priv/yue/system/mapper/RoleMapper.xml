<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="priv.yue.system.mapper.RoleMapper">

    <sql id="Base_Column_List">
        role_id, `name`, pid, description, data_scope, create_by, update_by, create_time, update_time
    </sql>

	<sql id="selectByUser">
		select role.*
		from sys_role role
			     left join sys_user_role sur on role.role_id = sur.role_id
			     left join sys_user user on sur.user_id = user.user_id
		where role.role_id = sur.role_id
			  and sur.user_id = #{userId}
			  and user.deleted = 0
	</sql>

	<resultMap id="BaseRM" type="priv.yue.common.domain.Role">
		<id column="role_id" jdbcType="BIGINT" property="roleId"/>
		<result column="name" jdbcType="VARCHAR" property="name"/>
		<result column="pid" jdbcType="BIGINT" property="pid"/>
		<result column="description" jdbcType="VARCHAR" property="description"/>
		<result column="data_scope" jdbcType="VARCHAR" property="dataScope"/>
		<result column="create_by" jdbcType="VARCHAR" property="createBy"/>
		<result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
		<result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
	</resultMap>

	<resultMap id="FullRM" type="priv.yue.common.domain.Role" extends="BaseRM">
		<association property="parentRole" javaType="priv.yue.common.domain.Role" select="selectById" column="pid"/>
		<collection property="subRole" ofType="priv.yue.common.domain.Role" select="selectAllByPid" column="role_id" />
		<collection property="menus" ofType="priv.yue.common.domain.Menu"
		            select="priv.yue.system.mapper.MenuMapper.selectByRole" column="role_id" />
	</resultMap>

	<resultMap id="PartRM" type="priv.yue.common.domain.Role" extends="BaseRM">
		<association property="parentRole" javaType="priv.yue.common.domain.Role" select="selectById" column="pid"/>
		<collection property="subRole" ofType="priv.yue.common.domain.Role" select="selectAllByPid" column="role_id" />
	</resultMap>

	<resultMap id="SimpleRM" type="priv.yue.common.domain.Role" extends="BaseRM">
		<association property="parentRole" javaType="priv.yue.common.domain.Role" select="selectById" column="pid"/>
	</resultMap>

	<select id="selectAllByPid" resultMap="PartRM">
		select
		<include refid="Base_Column_List"/>
		from sys_role
		where pid = #{pid}
		and deleted = 0
	</select>

	<select id="selectByUser" resultMap="SimpleRM">
		<include refid="selectByUser"/>
	</select>

	<select id="selectTreeByUser" resultMap="PartRM">
		<include refid="selectByUser"/>
	</select>

	<select id="selectByPK" resultMap="FullRM">
		select
		<include refid="Base_Column_List"/>
		from sys_role
		where role_id = #{roleId}
		and deleted = 0
	</select>

	<select id="countUser" resultType="int">
		select count(1)
		from sys_role role
			     left join sys_user_role sur on role.role_id = sur.role_id
			     left join sys_user user on sur.user_id = user.user_id
		where role.role_id = sur.role_id
		  and sur.role_id in
			<foreach collection="ids" index="index" item="item" separator="," open="(" close=")">
				#{item}
			</foreach>
		  and user.deleted = 0
	</select>

	<insert id="insertRoleMenu">
		insert into sys_role_menu (`menu_id`, `role_id`) values (#{menuId}, #{roleId})
	</insert>

	<insert id="deleteRoleMenu">
		delete from sys_role_menu where role_id = #{role_id}
	</insert>

</mapper>